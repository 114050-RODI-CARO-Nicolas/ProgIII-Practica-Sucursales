// <auto-generated />
using System;
using API_Sucursales_Practica.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Sucursales_Practica.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241124181050_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Sucursales_Practica.Domain.ConfiguracionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configuraciones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0afc4a45-f373-4672-a9ec-70c21f1d4241"),
                            Nombre = "padding-top",
                            Valor = "50px"
                        },
                        new
                        {
                            Id = new Guid("13aff489-c1db-45ee-8cee-9d33ac83e6eb"),
                            Nombre = "padding-left",
                            Valor = "100px"
                        });
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.ProvinciaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provincias");

                    b.HasData(
                        new
                        {
                            Id = new Guid("747df057-f50b-45e0-b3dd-1eb8170a8f57"),
                            Nombre = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("d1eca1f9-720c-4af0-94d6-bce8610f8175"),
                            Nombre = "Cordoba"
                        },
                        new
                        {
                            Id = new Guid("c25e4add-ae58-45e9-b738-0d1283f79090"),
                            Nombre = "Santa Fe"
                        });
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.SucursalEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApellidoTitual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdProvincia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.HasIndex("IdTipo");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.TipoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a668009c-1598-44f6-a271-6fb645c24cf6"),
                            Nombre = "Pequeña"
                        },
                        new
                        {
                            Id = new Guid("c82c4b6f-15ee-4223-a31c-8a36df93defe"),
                            Nombre = "Grande"
                        });
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.SucursalEntity", b =>
                {
                    b.HasOne("Practica_API_Sucursales.Domain.ProvinciaEntity", "Provincia")
                        .WithMany()
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practica_API_Sucursales.Domain.TipoEntity", "Tipo")
                        .WithMany("SucursalEntities")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.TipoEntity", b =>
                {
                    b.Navigation("SucursalEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
