// <auto-generated />
using System;
using API_Sucursales_Practica.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Sucursales_Practica.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241124233709_FourthMigration")]
    partial class FourthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Sucursales_Practica.Domain.ConfiguracionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configuraciones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("455c5498-77ee-4589-99da-32c7cb7a62ce"),
                            Nombre = "padding-top",
                            Valor = "50px"
                        },
                        new
                        {
                            Id = new Guid("43da7009-eabb-4616-a888-8d50714a219d"),
                            Nombre = "padding-left",
                            Valor = "100px"
                        });
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.ProvinciaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provincias");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a76b2a6c-3ef4-49dc-b8e5-690dda627417"),
                            Nombre = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("3b04a1ad-fafd-4142-837e-5f02816c3649"),
                            Nombre = "Cordoba"
                        },
                        new
                        {
                            Id = new Guid("e34a14e4-7c89-4609-a06b-86954e690aca"),
                            Nombre = "Santa Fe"
                        });
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.SucursalEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApellidoTitular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdProvincia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.HasIndex("IdTipo");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.TipoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a3e9f04-c7a7-4b4e-98a5-2f7277599bcc"),
                            Nombre = "Pequeña"
                        },
                        new
                        {
                            Id = new Guid("cc8c9384-1290-4d66-b379-a5d0b24fcaa4"),
                            Nombre = "Grande"
                        });
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.SucursalEntity", b =>
                {
                    b.HasOne("Practica_API_Sucursales.Domain.ProvinciaEntity", "Provincia")
                        .WithMany()
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practica_API_Sucursales.Domain.TipoEntity", "Tipo")
                        .WithMany("SucursalEntities")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Practica_API_Sucursales.Domain.TipoEntity", b =>
                {
                    b.Navigation("SucursalEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
